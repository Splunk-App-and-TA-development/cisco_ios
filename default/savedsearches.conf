[port flapping]
search = eventtype="cisco_ios-port_down" OR eventtype="cisco_ios-port_up" | stats count by host,src_int,port_status | sort -count | dedup host,src_int

[top acl logs]
#search = eventtype="cisco_ios-acl_log" NOT [inputlookup cisco_ios_acl_excluded_ips | fields acl_src_ip] | top limit=10 acl_proto,acl_list,acl_action,acl_src_ip,acl_dst_port by host | table host,acl_proto,acl_list,acl_action,acl_src_ip,acl_dst_port,host,count | sort 10 - count by host
search = eventtype="cisco_ios-acl_log" NOT [inputlookup cisco_ios_acl_excluded_ips | fields acl_src_ip] | stats sum(num_packets) AS "Total Packets" BY host,acl_list,acl_proto,acl_src_ip,acl_dst_port,acl_action | table host,acl_list,acl_proto,acl_src_ip,acl_dst_port,acl_action,"Total Packets" | sort 10 - count by host | sort -"Total Packets"

[cdp neighbors]
search = eventtype="cisco_ios-cdp_neighbor_added" OR eventtype=cisco_ios-cdp_neighbor_removed | dedup host,cdp_local_int | table host,cdp_local_int,cdp_remote_dvc,cdp_remote_dvc_serial,cdp_remote_int,cdp_remote_ip,cdp_remote_ip_mgmt,mnemonic | sort host,cdp_local_int

[time drift]
#search = index=ios sourcetype=cisco:ios | dedup host | eval device_time2=strptime(device_time, "%b %e %H:%M:%S.%Q %Z") | eval difference=_time-device_time2 | search difference>1 | convert timeformat="%s" ctime(difference) AS seconds | `sla-sec2time(seconds,time_difference)` | table _time,host,device_time,time_difference | sort -time_difference
search = sourcetype=cisco:ios | dedup host | eval dtime1=strptime(device_time, "%Y %b %e %H:%M:%S.%Q %Z") | eval dtime2=strptime(device_time, "%b %e %H:%M:%S.%Q %Z") | eval dtime3=strptime(device_time, "%b %e %H:%M:%S %Z") | eval dtime4=strptime(device_time, "%b %e %H:%M:%S.%Q") | eval dtime5=strptime(device_time, "%b %e %H:%M:%S") | eval device_time2=coalesce(dtime1,dtime2,dtime3,dtime4,dtime5) | eval difference=_time-device_time2 | convert timeformat="%s" ctime(difference) AS seconds | `sla-sec2time(seconds,time_difference)` | table _time,host,device_time,time_difference | sort -time_difference

[unreliable time]
search = sourcetype=cisco:ios reliable_time=false | dedup host | table _time, device_time, host

[change management transactions]
search = sourcetype=cisco:ios host="$hostToken$" eventtype=cisco_ios-config_started OR eventtype="cisco_ios-cfglog_loggedcmd" | rex mode=sed field=event_id "s/(\d+)/000000000\1/" | rex mode=sed field=event_id "s/0*([0-9]{9})/\1/" | eval event_command=event_id + " " + command | transaction maxspan=15m host,user | rex field=event_command "(?<eid>\d+)\s(?<cmd>.+)" | eval cmd=if(isnull(cmd), "ARCHIVING NOT ENABLED ON THIS DEVICE", cmd) | table _time,host,config_source,user,line,src_ip,eid,cmd


[smart install]
search = eventtype="cisco_ios-smart_install" NOT mnemonic="SMI_CLIENT_BACKUP_FAILURE" | table _time,host,mnemonic,dest_ip,dest_mac,result

[hsrp statechange]
search = eventtype="cisco_ios-standby" | table _time,host,src_int,group_id,state_from,state_to

[diagnostic count]
search = eventtype="cisco_ios-diag" OR eventtype="cisco_ios-best_practice_deviations" | eval eventcode=facility + "-" + severity_id + "-" + mnemonic | stats count AS Count, latest(_time) AS _time, latest(severity_id) AS severity_id by host, eventcode, message_text | lookup cisco_ios_severity severity_id | sort +severity_id,-Count | table _time, host, eventcode, message_text, severity_name, Count

[best practice deviations]
search = eventtype="cisco_ios-best_practice_deviations" | table host,facility,subfacility,mnemonic,message_text

[link changes]
search = host="$hostToken$" facility=LINK mnemonic="UPDOWN" | timechart span=1h count(port_status) by port_status | eval new_clients_in_period=up-down | rename new_clients_in_period AS "Link changes" | fields _time "Link changes"

# Used to populate a CSV file with all reporting hosts in the last 24 hours
[hosts last period]
#search = earliest=-24h index=ios | dedup host | rename _time AS last_reported_time | fields host, last_reported_time
#action.populate_lookup = 1
#action.populate_lookup.dest = cisco_ios_hosts_last_period
#run_on_startup = true
#cron_schedule = 19 15 * * *
#enableSched = 1
search = earliest=-24h sourcetype=cisco:ios | stats count by host | fields host | outputlookup cisco_ios_hosts_last_period
cron_schedule = 19 40 * * *
run_on_startup = true
description = Populate the Device table
disabled = 0
dispatch.earliest_time = -24h
enableSched = 1
