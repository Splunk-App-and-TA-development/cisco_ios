######################################################
#
# Cisco IOS
#
#
# Copyright (C) 2013 Mikael Bjerkeland
# All Rights Reserved
#
######################################################


#
# Lookups
#
[cisco_ios_severity]
filename = cisco_ios_severity.csv

[cisco_ios_acl_excluded_ips]
filename = cisco_ios_acl_excluded_ips.csv

[cisco_ios_actions]
filename = cisco_ios_actions.csv

[cisco_ios_apptype]
filename = cisco_ios_apptype.csv

[cisco_ios_vendor]
filename = cisco_ios_vendor.csv


#####################################
# 
# Field Extractions
#
#####################################
# Severity
[extract_cisco_ios-general]
# This one doesn't catch WLC events
#REGEX = \s(?<event_id>\d+)?\:\s(?:.\S+\:\s)?(?:[\.\*])?(?<device_time>.+)?\:\s%(?<facility>(?!POLICY_ENGINE)[A-Z0-9_]+)-(?<subfacility>[A-Z_12]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z_]+):\s(?<message_text>.+)
# But this one does!
REGEX = (\s(?<event_id>\d+)?\:\s(?:.\S+\:\s)?(?<reliable_time>[\.\*])?(?<device_time>.+)?)?\:\s%(?<facility>(?!POLICY_ENGINE|UCSM|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)
# Consider this one. Same as above but makes sure the hostname is there. Thus doesn't capture i.e. ACS events that include the IOS syslog format in their "body"
#REGEX = (?<reported_hostname>\S+)(\s(?<event_id>\d+)?\:\s(?:.\S+\:\s)?(?<reliable_time>[\.\*])?(?<device_time>.+)?)?\:\s%(?<facility>(?!POLICY_ENGINE|UCSM|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)


# This one catches UCS events. Do we want it?
# REGEX = (\s(?<event_id>\d+)?\:\s(?:.\S+\:\s)?(?:[\.\*])?((?<device_time>.+)?)?\:\s)(.+)?%(?<facility>(?!POLICY_ENGINE|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)

[extract_cisco_ios-acl]
#REGEX = list\s(.+)\s(denied|permitted)\s(tcp|udp|igmp|ipinip|gre|eigrp|ospf|nosip|pim|icmp|sctp|icmpv6|)\s(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)\(?(\d+)?\)?\s->\s(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)\(?(\d+)?\)?
#FORMAT = acl_list::$1 acl_action::$2 acl_proto::$3 acl_src_ip::$4 acl_src_port::$5 acl_dst_ip::$6 acl_dst_port::$7
REGEX = list\s(?<acl_list>.+)\s(?<acl_action>denied|permitted)\s(?<acl_proto>tcp|udp|igmp|ipinip|gre|eigrp|ospf|nosip|pim|icmp|sctp|icmpv6|)\s(?<acl_src_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)\(?(?<acl_src_port>\d+)?\)?(\s\((?<src_int>\S+) (?<src_mac>\S+)\))?\s->\s(?<acl_dst_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)\(?(?<acl_dst_port>\d+)?\)(, (?<num_packets>\S+) packet(s)?)?


# NOT COMPLETE, ONLY SHOWS LOCAL PORT AND NEIGHBOR
#
[extract_cisco_ios-duplex_mismatch]
REGEX = (?:[^\-\n]*\-){5}DUPLEX_MISMATCH(?:[^ \n]* ){5}(?<cdp_local_interface>[^ ]+)(?:[^ \n]* ){5}(?<cdp_neighbor>[^ ]+)


########################
# 802.1x / Dot1x
########################
[extract_cisco_ios-dot1x_switch_err_vlan_not_found]
REGEX = %DOT1X_SWITCH-5-ERR_VLAN_NOT_FOUND: Attempt to assign non-existent or shutdown VLAN (?<src_vlan>\S+) to 802.1x port (?<src_int>\S+)(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-dot1x_auth]
REGEX = %DOT1X-5-[^:]+: Authentication (?<action>\w+) for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>\S+)(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-mab_auth]
REGEX = %MAB-5-[^:]+: Authentication (?<action>\w+) for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>\S+)(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-authmgr_fail_success]
REGEX = %AUTHMGR-5-(FAIL|SUCCESS): %AUTHMGR-5-(FAIL|SUCCESS): Authorization (?<action>\w+) for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>\S+)(\sAuditSessionID (?<audit_session_id>\S+))? 

[extract_cisco_ios-authmgr_start]
REGEX = %AUTHMGR-5-START: Starting 'mab' for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>\S+)(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-authmgr_vlanassign]
REGEX = %AUTHMGR-5-VLANASSIGN: VLAN (?<src_vlan>\d+) assigned to Interface (?<src_int>\S+)(\sAuditSessionID (?<audit_session_id>\S+))? 


########################
# DHCP
########################
[extract_cisco_ios-dhcp_snooping_match_mac_fail]
REGEX = %DHCP_SNOOPING-5-DHCP_SNOOPING_MATCH_MAC_FAIL: DHCP_SNOOPING drop message because the chaddr doesn't match source mac, message type: (?<message_type>[A-Z_]+), chaddr: (?<chaddr>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4}), MAC sa: (?<src_mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4})


########################
# Threshold
########################
[extract_cisco_ios-sff8472_threshold-violation]
REGEX = %SFF8472-5-THRESHOLD_VIOLATION: (?<src_int>\S+): (?<alarm>.+) (?<trigger>low|high) (?<notice>alarm|warning);\s+Operating value:\s+(?<operating_value>\S+) (?<unit>\S+), Threshold value:\s+(?<threshold_value>\S+) (\S+)\.(\s\((?<switch>.+)\))?


########################
# SSH
########################
[extract_cisco_ios-ssh_ssh2_session]
REGEX = %SSH-\d-SSH2_SESSION: SSH2 Session request from (?<src_ip>\S+) \(tty = (?<tty>\d+)\) using crypto cipher '(?<cipher>\S*)', hmac '(?<hmac>\S*)' (?<result>Failed|Succeeded)

[extract_cisco_ios-ssh_ssh2_userauth]
REGEX = %SSH-\d-SSH2_USERAUTH: User '(?<user>\S+)' authentication for SSH2 Session from (?<src_ip>\S+) \(tty = (?<tty>\d+)\) using crypto cipher '(?<cipher>\S*)', hmac '(?<hmac>\S*)' (?<result>Failed|Succeeded)

########################
# SMI (Smart Install/Vstack)
# http://www.cisco.com/en/US/docs/switches/lan/smart_install/configuration/guide/messages.html
########################
[extract_cisco_ios-smi_upgrd]
REGEX = %SMI-\d-UPGRD_(STARTED|SUCCESS|FAILED): Device \(IP address: (?<dest_ip>\S+)\) (?<result>.+) 

[extract_cisco_ios-smi_switch_add]
REGEX = %SMI-\d-SWITCH_ADD: (?<result>New Device detected by Director) with mac address: (?<dest_mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4})

[extract_cisco_ios-smi_switch_remove]
REGEX = %SMI-\d-SWITCH_REMOVE: Device (?<dest_mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4}) (?<result>.+)


########################
# HSRP 
# http://www.cisco.com/en/US/tech/tk648/tk362/technologies_tech_note09186a0080094afd.shtml#topic13
########################
[extract_cisco_ios-standby_statechange]
REGEX = %(STANDBY|HSRP)-\d-STATECHANGE: (?<src_int>\S+) (Grp|Group) (?<group_id>\d+) state (?<state_from>\S+) -> (?<state_to>\S+)


########################
# DTP (Dynamic Trunking Protocol) 
########################
# switchport nonegotiate should be suggested when we get this...
[extract_cisco_ios-dtp_domainmismatch]
REGEX = %DTP-\d-DOMAINMISMATCH: Unable to perform trunk negotiation on port (?<src_int>\S+) because of VTP domain mismatch

[extract_cisco_ios-dtp_trunkporton]
REGEX = %DTP-\d-(NON)?TRUNKPORTON: Port (?<src_int>\S+) has become (?<result>dot1q trunk|non-trunk)

[extract_cisco_ios-ip_dupaddr]
REGEX = %IP-\d-DUPADDR: Duplicate address (?<src_ip>\S+) on (?<src_int>\S+), sourced by (?<src__mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4}) 



[extract_cisco_ios-ip_snmp_notrapip]
REGEX = %IP_SNMP-\d-NOTRAPIP: SNMP trap source (?<src_int>\S+) has no ip address
